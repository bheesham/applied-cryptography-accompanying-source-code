%!PS-Adobe-3.0 EPSF-2.0
%%Creator: Windows PSCRIPT
%%Title: Microsoft Word - RIPEMSRV.DOC
%%BoundingBox: 18 9 593 784
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%Pages: 0
%%BeginResource: procset Win35Dict 3 1
/Win35Dict 290 dict def Win35Dict begin/bd{bind def}bind def/in{72
mul}bd/ed{exch def}bd/ld{load def}bd/tr/translate ld/gs/gsave ld/gr
/grestore ld/M/moveto ld/L/lineto ld/rmt/rmoveto ld/rlt/rlineto ld
/rct/rcurveto ld/st/stroke ld/n/newpath ld/sm/setmatrix ld/cm/currentmatrix
ld/cp/closepath ld/ARC/arcn ld/TR{65536 div}bd/lj/setlinejoin ld/lc
/setlinecap ld/ml/setmiterlimit ld/sl/setlinewidth ld/scignore false
def/sc{scignore{pop pop pop}{0 index 2 index eq 2 index 4 index eq
and{pop pop 255 div setgray}{3{255 div 3 1 roll}repeat setrgbcolor}ifelse}ifelse}bd
/FC{bR bG bB sc}bd/fC{/bB ed/bG ed/bR ed}bd/HC{hR hG hB sc}bd/hC{
/hB ed/hG ed/hR ed}bd/PC{pR pG pB sc}bd/pC{/pB ed/pG ed/pR ed}bd/sM
matrix def/PenW 1 def/iPen 5 def/mxF matrix def/mxE matrix def/mxUE
matrix def/mxUF matrix def/fBE false def/iDevRes 72 0 matrix defaultmatrix
dtransform dup mul exch dup mul add sqrt def/fPP false def/SS{fPP{
/SV save def}{gs}ifelse}bd/RS{fPP{SV restore}{gr}ifelse}bd/EJ{gsave
showpage grestore}bd/#C{userdict begin/#copies ed end}bd/FEbuf 2 string
def/FEglyph(G  )def/FE{1 exch{dup 16 FEbuf cvrs FEglyph exch 1 exch
putinterval 1 index exch FEglyph cvn put}for}bd/SM{/iRes ed/cyP ed
/cxPg ed/cyM ed/cxM ed 72 100 div dup scale dup 0 ne{90 eq{cyM exch
0 eq{cxM exch tr -90 rotate -1 1 scale}{cxM cxPg add exch tr +90 rotate}ifelse}{cyP
cyM sub exch 0 ne{cxM exch tr -90 rotate}{cxM cxPg add exch tr -90
rotate 1 -1 scale}ifelse}ifelse}{pop cyP cyM sub exch 0 ne{cxM cxPg
add exch tr 180 rotate}{cxM exch tr 1 -1 scale}ifelse}ifelse 100 iRes
div dup scale 0 0 transform .25 add round .25 sub exch .25 add round
.25 sub exch itransform translate}bd/SJ{1 index 0 eq{pop pop/fBE false
def}{1 index/Break ed div/dxBreak ed/fBE true def}ifelse}bd/ANSIVec[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#89/perthousand 16#8A/Scaron
16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97
/emdash 16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe
16#9F/Ydieresis 16#A0/space 16#A4/currency 16#A6/brokenbar 16#A7/section
16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB/guillemotleft
16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron 16#B0/degree
16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute 16#B5
/mu 16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf
16#BE/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2
/Acircumflex 16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7
/Ccedilla 16#C8/Egrave 16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis
16#CC/Igrave 16#CD/Iacute 16#CE/Icircumflex 16#CF/Idieresis 16#D0/Eth
16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute 16#D4/Ocircumflex 16#D5/Otilde
16#D6/Odieresis 16#D7/multiply 16#D8/Oslash 16#D9/Ugrave 16#DA/Uacute
16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute 16#DE/Thorn 16#DF/germandbls
16#E0/agrave 16#E1/aacute 16#E2/acircumflex 16#E3/atilde 16#E4/adieresis
16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8/egrave 16#E9/eacute 16#EA
/ecircumflex 16#EB/edieresis 16#EC/igrave 16#ED/iacute 16#EE/icircumflex
16#EF/idieresis 16#F0/eth 16#F1/ntilde 16#F2/ograve 16#F3/oacute 16#F4
/ocircumflex 16#F5/otilde 16#F6/odieresis 16#F7/divide 16#F8/oslash
16#F9/ugrave 16#FA/uacute 16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute
16#FE/thorn 16#FF/ydieresis ] def/reencdict 12 dict def/IsChar{basefontdict
/CharStrings get exch known}bd/MapCh{dup IsChar not{pop/bullet}if
newfont/Encoding get 3 1 roll put}bd/MapDegree{16#b0/degree IsChar{
/degree}{/ring}ifelse MapCh}bd/MapBB{16#a6/brokenbar IsChar{/brokenbar}{
/bar}ifelse MapCh}bd/ANSIFont{reencdict begin/newfontname ed/basefontname
ed FontDirectory newfontname known not{/basefontdict basefontname findfont
def/newfont basefontdict maxlength dict def basefontdict{exch dup/FID
ne{dup/Encoding eq{exch dup length array copy newfont 3 1 roll put}{exch
newfont 3 1 roll put}ifelse}{pop pop}ifelse}forall newfont/FontName
newfontname put 127 1 159{newfont/Encoding get exch/bullet put}for
ANSIVec aload pop ANSIVec length 2 idiv{MapCh}repeat MapDegree MapBB
newfontname newfont definefont pop}if newfontname end}bd/SB{FC/ULlen
ed/str ed str length fBE not{dup 1 gt{1 sub}if}if/cbStr ed/dxGdi ed
/y0 ed/x0 ed str stringwidth dup 0 ne{/y1 ed/x1 ed y1 y1 mul x1 x1
mul add sqrt dxGdi exch div 1 sub dup x1 mul cbStr div exch y1 mul
cbStr div}{exch abs neg dxGdi add cbStr div exch}ifelse/dyExtra ed
/dxExtra ed x0 y0 M fBE{dxBreak 0 BCh dxExtra dyExtra str awidthshow}{dxExtra
dyExtra str ashow}ifelse fUL{x0 y0 M dxUL dyUL rmt ULlen fBE{Break
add}if 0 mxUE transform gs rlt cyUL sl [] 0 setdash st gr}if fSO{x0
y0 M dxSO dySO rmt ULlen fBE{Break add}if 0 mxUE transform gs rlt cyUL
sl [] 0 setdash st gr}if n/fBE false def}bd/font{/name ed/Ascent ed
0 ne/fT3 ed 0 ne/fSO ed 0 ne/fUL ed/Sy ed/Sx ed 10.0 div/ori ed -10.0
div/esc ed/BCh ed name findfont/xAscent 0 def/yAscent Ascent def/ULesc
esc def ULesc mxUE rotate pop fT3{/esc 0 def xAscent yAscent mxUE transform
/yAscent ed/xAscent ed}if [Sx 0 0 Sy neg xAscent yAscent] esc mxE
rotate mxF concatmatrix makefont setfont [Sx 0 0 Sy neg 0 Ascent] mxUE
mxUF concatmatrix pop fUL{currentfont dup/FontInfo get/UnderlinePosition
known not{pop/Courier findfont}if/FontInfo get/UnderlinePosition get
1000 div 0 exch mxUF transform/dyUL ed/dxUL ed}if fSO{0 .3 mxUF transform
/dySO ed/dxSO ed}if fUL fSO or{currentfont dup/FontInfo get/UnderlineThickness
known not{pop/Courier findfont}if/FontInfo get/UnderlineThickness get
1000 div Sy mul/cyUL ed}if}bd/min{2 copy gt{exch}if pop}bd/max{2 copy
lt{exch}if pop}bd/CP{/ft ed{{ft 0 eq{clip}{eoclip}ifelse}stopped{currentflat
1 add setflat}{exit}ifelse}loop}bd/patfont 10 dict def patfont begin
/FontType 3 def/FontMatrix [1 0 0 -1 0 0] def/FontBBox [0 0 16 16]
def/Encoding StandardEncoding def/BuildChar{pop pop 16 0 0 0 16 16
setcachedevice 16 16 false [1 0 0 1 .25 .25]{pat}imagemask}bd end/p{
/pat 32 string def{}forall 0 1 7{dup 2 mul pat exch 3 index put dup
2 mul 1 add pat exch 3 index put dup 2 mul 16 add pat exch 3 index
put 2 mul 17 add pat exch 2 index put pop}for}bd/pfill{/PatFont patfont
definefont setfont/ch(AAAA)def X0 64 X1{Y1 -16 Y0{1 index exch M ch
show}for pop}for}bd/vert{X0 w X1{dup Y0 M Y1 L st}for}bd/horz{Y0 w
Y1{dup X0 exch M X1 exch L st}for}bd/fdiag{X0 w X1{Y0 M X1 X0 sub dup
rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup rlt st}for}bd/bdiag{X0 w
X1{Y1 M X1 X0 sub dup neg rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup
neg rlt st}for}bd/AU{1 add cvi 15 or}bd/AD{1 sub cvi -16 and}bd/SHR{pathbbox
AU/Y1 ed AU/X1 ed AD/Y0 ed AD/X0 ed}bd/hfill{/w iRes 37.5 div round
def 0.1 sl [] 0 setdash n dup 0 eq{horz}if dup 1 eq{vert}if dup 2 eq{fdiag}if
dup 3 eq{bdiag}if dup 4 eq{horz vert}if 5 eq{fdiag bdiag}if}bd/F{/ft
ed fm 256 and 0 ne{gs FC ft 0 eq{fill}{eofill}ifelse gr}if fm 1536
and 0 ne{SHR gs HC ft CP fm 1024 and 0 ne{/Tmp save def pfill Tmp restore}{fm
15 and hfill}ifelse gr}if}bd/S{PenW sl PC st}bd/m matrix def/GW{iRes
12 div PenW add cvi}bd/DoW{iRes 50 div PenW add cvi}bd/DW{iRes 8 div
PenW add cvi}bd/SP{/PenW ed/iPen ed iPen 0 eq iPen 6 eq or{[] 0 setdash}if
iPen 1 eq{[DW GW] 0 setdash}if iPen 2 eq{[DoW GW] 0 setdash}if iPen
3 eq{[DW GW DoW GW] 0 setdash}if iPen 4 eq{[DW GW DoW GW DoW GW] 0
setdash}if}bd/E{m cm pop tr scale 1 0 moveto 0 0 1 0 360 arc cp m sm}bd
/AG{/sy ed/sx ed sx div 4 1 roll sy div 4 1 roll sx div 4 1 roll sy
div 4 1 roll atan/a2 ed atan/a1 ed sx sy scale a1 a2 ARC}def/A{m cm
pop tr AG m sm}def/P{m cm pop tr 0 0 M AG cp m sm}def/RRect{n 4 copy
M 3 1 roll exch L 4 2 roll L L cp}bd/RRCC{/r ed/y1 ed/x1 ed/y0 ed/x0
ed x0 x1 add 2 div y0 M x1 y0 x1 y1 r arcto 4{pop}repeat x1 y1 x0 y1
r arcto 4{pop}repeat x0 y1 x0 y0 r arcto 4{pop}repeat x0 y0 x1 y0 r
arcto 4{pop}repeat cp}bd/RR{2 copy 0 eq exch 0 eq or{pop pop RRect}{2
copy eq{pop RRCC}{m cm pop/y2 ed/x2 ed/ys y2 x2 div 1 max def/xs x2
y2 div 1 max def/y1 exch ys div def/x1 exch xs div def/y0 exch ys div
def/x0 exch xs div def/r2 x2 y2 min def xs ys scale x0 x1 add 2 div
y0 M x1 y0 x1 y1 r2 arcto 4{pop}repeat x1 y1 x0 y1 r2 arcto 4{pop}repeat
x0 y1 x0 y0 r2 arcto 4{pop}repeat x0 y0 x1 y0 r2 arcto 4{pop}repeat
m sm cp}ifelse}ifelse}bd/PP{{rlt}repeat}bd/OB{gs 0 ne{7 3 roll/y ed
/x ed x y translate ULesc rotate x neg y neg translate x y 7 -3 roll}if
sc B fill gr}bd/B{M/dy ed/dx ed dx 0 rlt 0 dy rlt dx neg 0 rlt cp}bd
/CB{B clip n}bd/ErrHandler{errordict dup maxlength exch length gt
dup{errordict begin}if/errhelpdict 12 dict def errhelpdict begin/stackunderflow(operand stack underflow)def
/undefined(this name is not defined in a dictionary)def/VMerror(you have used up all the printer's memory)def
/typecheck(operator was expecting a different type of operand)def
/ioerror(input/output error occured)def end{end}if errordict begin
/handleerror{$error begin newerror{/newerror false def showpage 72
72 scale/x .25 def/y 9.6 def/Helvetica findfont .2 scalefont setfont
x y moveto(Offending Command = )show/command load{dup type/stringtype
ne{(max err string)cvs}if show}exec/y y .2 sub def x y moveto(Error = )show
errorname{dup type dup( max err string )cvs show( : )show/stringtype
ne{( max err string )cvs}if show}exec errordict begin errhelpdict errorname
known{x 1 add y .2 sub moveto errhelpdict errorname get show}if end
/y y .4 sub def x y moveto(Stack =)show ostack{/y y .2 sub def x 1
add y moveto dup type/stringtype ne{( max err string )cvs}if show}forall
showpage}if end}def end}bd end
%%EndResource
/SVDoc save def
%%EndProlog
%%BeginSetup
Win35Dict begin
ErrHandler
%%EndSetup
SS
0 0 25 11 798 1100 300 SM
32 0 0 75 75 0 0 0 69 /Times-Bold /font29 ANSIFont font
0 0 0 fC
617 295 1165 (RIPEM INTERNET KEY SERVER) 1165 SB
994 383 412 (User's Guide) 412 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
1008 558 383 (Gary Ratterree) 383 SB
911 627 578 (Texas A&M University) 578 SB
32 0 0 58 58 0 0 0 46 /Courier /font0 ANSIFont font
902 763 595 (garyr@cs.tamu.edu) 595 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
1050 896 299 (March 1993) 299 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
301 1053 1798 (Portions of this manual have been adapted from the RIPEM User's Guide \(December 1992) 1798 SB
640 1112 519 (edition\) by Mark Riordan ) 519 SB
32 0 0 50 50 0 0 0 39 /Courier /font0 ANSIFont font
1159 1118 600 (mrr@scss3.cl.msu.edu) 600 SB
32 0 0 50 50 1 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 1273 729 (I. Using the RIPEM Key Server:) 729 SB
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font13 ANSIFont font
300 1383 784 (Key Server Description and Limitations) 784 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
450 1484 1629 (If you have Internet access, you can communicate your key to others by registering the key on an) 1629 SB
450 1534 1631 (Internet RIPEM key server.  Currently, there is an "experimental" RIPEM key server running on) 1631 SB
450 1584 144 (the host ) 144 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
594 1589 425 (dsls4.cs.tamu.edu) 425 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1019 1584 1009 (.  This host is experimental in that it is an unofficial service) 1009 SB
450 1636 1106 (which may have to be terminated with little or no advance notice.) 1106 SB
450 1736 1551 (This RIPEM key server acts as a central repository for public keys, saving users the effort of) 1551 SB
450 1786 1553 (distributing their keys individually to all potential correspondents.  This key server is not an) 1553 SB
450 1836 1640 (especially secure mechanism.  The level of security present in the key protocols is much less than) 1640 SB
450 1886 1625 (that provided, for instance, by the Privacy Enhanced Mail certificate mechanism specified in the) 1625 SB
450 1936 1611 (Internet PEM RFC's.  The authenticity of keys maintained on the server is not guaranteed.  The) 1611 SB
450 1986 1450 (RIPEM key server is simply a means for RIPEM users to conveniently exchange keys.) 1450 SB
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font13 ANSIFont font
300 2085 728 (Registering a Key via the Key Server) 728 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
450 2186 1609 (To allow the maximum number of users to publicize their keys via this mechanism, the RIPEM) 1609 SB
450 2236 1615 (key server accepts key registration requests by electronic mail.  Although the RIPEM key server) 1615 SB
450 2286 1547 (itself is connected only to the Internet, users of non-Internet networks such as CompuServe,) 1547 SB
450 2336 1535 (BITNET, and so on can register their keys by sending their key registration requests via an) 1535 SB
450 2386 500 (appropriate network gateway.) 500 SB
450 2486 1620 (To register your key, send the public component \(the output file from the -P option\) to the email) 1620 SB
450 2536 126 (address) 126 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 2634 775 (ripem-register-keys@cs.tamu.edu) 775 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
450 2731 1329 (On a UNIX system, for instance, you can register your key by a command like:) 1329 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 2829 1225 (mail ripem-register-keys@cs.tamu.edu <mypublickey) 1225 SB
EJ RS
%%PageTrailer
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Helvetica-Oblique /font19 ANSIFont font
0 0 0 fC
1329 118 748 (RIPEM Key Server User's Guide   Page ) 748 SB
2077 118 23 (2) 23 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
450 269 1520 (The key server will register your public key in its database and will send you a confirming) 1520 SB
450 319 1598 (message.  The key is identified by the email address specified during the generation of the key,) 1598 SB
450 369 1397 (but the confirming message is sent to the address from which the key file was sent.) 1397 SB
450 469 1637 (If you read electronic mail on several different hosts but wish to use the same public key on all of) 1637 SB
450 519 1562 (them, you can register the key under multiple names.  You can do this by editing the key file) 1562 SB
450 569 904 (before sending it to the server, and adding additional ) 904 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
1354 574 125 (User:) 125 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1479 569 585 ( lines.  \(See the separate document) 585 SB
450 621 639 (on file formats for more information.\)) 639 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
450 669 650 (-----BEGIN PUBLIC KEY-----) 650 SB
450 714 575 (User: garyr@cs.tamu.edu) 575 SB
450 759 350 (User: garyr@cs) 350 SB
450 804 275 (User: garyr) 275 SB
450 849 350 (PublicKeyInfo:) 350 SB
450 894 1625 ( MFgwCgYEVQgBAQICAf8DSgAwRwJAbiMDTw/j/q7H7hUDBFYV/+8NBBJM/IsaIY1G) 1625 SB
450 939 1425 ( s6SByD1NRBqCkblUq4iYETsW0/JQKieZYwYntNAgu3+bRIuUxwIDAQAB) 1425 SB
450 984 1200 (MD5OfPublicKey: 5A677077AB7C6D9DD358224A72735CC7) 1200 SB
450 1029 600 (-----END PUBLIC KEY-----) 600 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
450 1076 1344 (Or, you can register the key under different names via separate email messages.) 1344 SB
450 1176 1533 (To subsequently delete your key from the server, encrypt a message starting with the string) 1533 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 1274 225 (RemoveKey) 225 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
450 1371 149 (with the ) 149 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
599 1376 275 (-m mic-only) 275 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
874 1371 1176 ( command line option and send the encrypted message to the address:) 1176 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 1471 725 (ripem-remove-keys@cs.tamu.edu) 725 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
450 1568 1340 (The message must have been encrypted by the owner of the key being removed.) 1340 SB
450 1668 1644 (To change your key on the server, generate a new key pair and encrypt the public component \(the) 1644 SB
450 1718 320 (file from RIPEM's ) 320 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
770 1723 50 (-P) 50 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
820 1718 292 ( option\) with the ) 292 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
1112 1723 275 (-m mic-only) 275 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1387 1718 698 ( command line option.  Send the result to) 698 SB
450 1770 201 (the address:) 201 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
600 1868 725 (ripem-change-keys@cs.tamu.edu) 725 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
450 1965 1336 (The message must have been encrypted by the owner of the key being changed.) 1336 SB
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font13 ANSIFont font
300 2064 996 (Obtaining Keys from the Key Server:  Live Access) 996 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
300 2165 1776 (Real-time "live" queries to the RIPEM key server are made directly by RIPEM using the UDP IP network) 1776 SB
300 2215 1749 (protocol.  "Live" queries are possible if your computer is connected to the Internet, your copy of RIPEM) 1749 SB
300 2265 1764 (has been compiled for network access, and your computer is running the right network software.  This is) 1764 SB
300 2315 1757 (often true of UNIX computers but is generally not true of other computers.  At this writing, for instance,) 1757 SB
300 2365 1710 (the MS-DOS version of RIPEM supports only the PC/TCP network software from FTP Software, Inc.) 1710 SB
300 2465 1713 (In order to access the key server, RIPEM needs to know its Internet address.  You can tell RIPEM the) 1713 SB
300 2515 1223 (address of the server in two ways:  you can set the environment variable ) 1223 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
1523 2520 425 (RIPEM_SERVER_NAME) 425 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1948 2515 106 ( to the) 106 SB
300 2567 1077 (name of the server, or you can specify the server name with the ) 1077 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
1377 2572 50 (-y) 50 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1427 2567 640 ( command line option.  In either case,) 640 SB
300 2619 1701 (you can specify more than one server name, separating the server names with commas \(and no blank) 1701 SB
300 2669 1730 (spaces\).  If you specify a list of server names in this way, when querying servers RIPEM will query the) 1730 SB
300 2719 1414 (servers in the order listed until it obtains the desired public key, or exhausts the list.) 1414 SB
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font13 ANSIFont font
300 2818 1132 (Obtaining Keys from the Key Server:  Email-Only Access) 1132 SB
EJ RS
%%PageTrailer
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Helvetica-Oblique /font19 ANSIFont font
0 0 0 fC
1329 118 748 (RIPEM Key Server User's Guide   Page ) 748 SB
2077 118 23 (3) 23 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
300 269 1696 (For users for whom live UDP network access to the RIPEM key server is not possible or not feasible,) 1696 SB
300 319 1783 (electronic mail access to the key server has been implemented.  To obtain a copy of the complete database) 1783 SB
300 369 1136 (of registered RIPEM keys via email, send a message to the address:) 1136 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
450 467 650 (ripem-get-keys@cs.tamu.edu) 650 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
300 564 1583 (The subject and content of the message are ignored by the server, and hence can be left blank.) 1583 SB
300 664 1791 (The return email message will contain a flat file of public keys, readable directly by RIPEM.  This file can) 1791 SB
300 714 1396 (be used as described in the section discussing flat files in the RIPEM User's Guide.) 1396 SB
32 0 0 50 50 1 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 864 697 (II. KEY SERVER PROGRAMS:) 697 SB
32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
300 975 213 (copymail:) 213 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
450 1031 1506 (The copymail program simply copies incoming messages to separate files into the correct) 1506 SB
300 1081 1800 ("incoming" directory.  This program receives public key addition, change, and deletion requests via e-mail) 1800 SB
300 1131 1731 (over the Internet.  This program is run on demand \(i.e. not in the background\) when ever mail arrives.) 1731 SB
300 1181 1338 (Section III describes how to create the correct mail aliases entries for copymail.) 1338 SB
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
450 1281 890 (copymail has the following command line options:) 890 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
600 1331 35 (-d) 35 SB
750 1331 1306 (\(directory\) This switch tells copymail which directory to place incoming mail) 1306 SB
750 1381 45 (in.) 45 SB
32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
300 1481 216 (givepubs:) 216 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
450 1537 1538 (The givepubs program responds to email requests for the flat file version of the database by) 1538 SB
300 1587 1796 (mailing back the file to the requester.  This program provides the service of distributing the RIPEM public) 1796 SB
300 1637 379 (key database by email.) 379 SB
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
450 1737 884 (givepubs has the following command line options:) 884 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
600 1787 27 (-f) 27 SB
750 1787 1083 (\(filename\) This is the name of the file that givepubs is to return.) 1083 SB
600 1837 30 (-s) 30 SB
750 1837 1242 (\(subject\) This string will appear on the subject line of the return message.) 1242 SB
32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
300 1937 183 (rkeyreg:) 183 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
450 1993 1583 (Rkeyreg is the key registration program.  It runs in the background, periodically waking up to) 1583 SB
300 2043 1769 (scan copymail's "incoming" directories.  When a new file has arrived, rkeyreg sends a signal to rkeyserv,) 1769 SB
300 2093 1633 (asking it to grant access to the real, random-access key database.  rkeyreg then reads through the) 1633 SB
300 2143 1697 (incoming files, extracting keys and performing the requested operations on the key database.  It then) 1697 SB
300 2193 1764 (sends a message to the sender of each file \(not necessarily the owner of the keys in the file\), reporting on) 1764 SB
300 2243 966 (the success or failure of the attempt to register the key\(s\).) 966 SB
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
450 2343 870 (rkeyreg has the following command line options:) 870 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
600 2393 33 (-a) 33 SB
750 2393 1225 (\(add directory\) The directory to scan for incoming key addition requests.) 1225 SB
600 2443 29 (-r) 29 SB
750 2443 1115 (\(remove directory\) The directory to scan for key removal requests.) 1115 SB
600 2493 32 (-c) 32 SB
750 2493 1094 (\(change directory\) The directory to scan for key change requests.) 1094 SB
600 2543 26 (-t) 26 SB
750 2543 1194 (\(timeout\) The number of seconds we wait before each access to the key) 1194 SB
750 2593 1342 (database.  This keeps us from hogging the database and allows UDP requests to) 1342 SB
750 2643 1027 (be processed in a timely manner.  Default value is 3 seconds.) 1027 SB
600 2693 26 (-l) 26 SB
750 2693 1027 (\(log file\) The name of a file to keep a running request log in.) 1027 SB
600 2743 30 (-s) 30 SB
750 2743 1299 (\(timeout scan\) The number of seconds to wait between scans of the incoming) 1299 SB
750 2793 1258 (file directories.  Larger values create slower responses, but less load on the) 1258 SB
750 2843 584 (CPU.  Default value is 10 seconds.) 584 SB
600 2893 34 (-o) 34 SB
750 2893 1031 (The name of the key database file \(the one in GDBM format\)) 1031 SB
EJ RS
%%PageTrailer
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Helvetica-Oblique /font19 ANSIFont font
0 0 0 fC
1329 118 748 (RIPEM Key Server User's Guide   Page ) 748 SB
2077 118 23 (4) 23 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
600 269 35 (-p) 35 SB
750 269 1290 (The name of the file where rkeyerv's process id is contained.  This argument) 1290 SB
750 319 1235 (allows rkeyreg to communicate with the server for access to the database.) 1235 SB
600 369 44 (-D) 44 SB
750 369 1336 (\(debug\) Turns on debugging output when not zero.  Useful for error correction.) 1336 SB
750 419 1165 (Values of 1,2, and 3 turn on various error and information messages.) 1165 SB
600 469 39 (-Z) 39 SB
750 469 989 (\(debug file\) Name of a file to redirect debugging output to.) 989 SB
32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
300 569 205 (rkeyserv:) 205 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
450 625 1590 (The main server program is rkeyserv.  This program runs in the background, waiting for UDP) 1590 SB
300 675 1721 (requests for key lookup from RIPEM programs.  It responds by looking up the key in the database and) 1721 SB
300 725 1754 (sending back a UDP packet containing the key.  The server is a stateless UDP-based server.  It normally) 1754 SB
300 775 1437 (has the key database open read-only, but closes the database upon request by rkeyreg.) 1437 SB
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
450 875 885 (rkeyserv has the following command line options:) 885 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
600 925 35 (-g) 35 SB
750 925 1283 (\(database name\) The name of the file to use as the key database.  Must be in) 1283 SB
750 975 322 (GDBM 1.5 format.) 322 SB
600 1025 35 (-p) 35 SB
750 1025 1245 (\(port number\) The number of the UDP port to use.  Default value is 1611.) 1245 SB
600 1075 27 (-f) 27 SB
750 1075 695 (\(fast\) Turns off unnecessary system calls.) 695 SB
600 1125 37 (-P) 37 SB
750 1125 1268 (\(process ID file\) The name of the file to store the rkeyserv's process id into.) 1268 SB
750 1175 969 (This file is used by rkeyreg to coordinate database access.) 969 SB
600 1225 26 (-t) 26 SB
750 1225 1230 (\(timeout\) The number of seconds to wait on the UDP socket select before) 1230 SB
750 1275 682 (timing out.  Default value is one second.) 682 SB
600 1325 35 (-d) 35 SB
750 1325 1226 (\(detach\) Tells rkeyserv not to detach itself from the controlling terminal.) 1226 SB
600 1375 44 (-D) 44 SB
750 1375 129 (\(debug\)) 129 SB
900 1375 1073 (Turns on debugging output if greater than zero. Default is zero.) 1073 SB
600 1425 39 (-Z) 39 SB
750 1425 1058 (\(debug file\) The name of a file to redirect debugging output to.) 1058 SB
32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
300 1575 166 (db2flat:) 166 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
450 1631 1638 (This program converts the key database \(which is kept in GDBM format\) to a flat file that can be) 1638 SB
300 1681 1792 (read directly by RIPEM. This program is usually run periodically as a cron job to create the key file that is) 1792 SB
300 1731 358 (distributed via email.) 358 SB
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
450 1831 856 (db2flat has the following command line options:) 856 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
600 1881 35 (-g) 35 SB
750 1881 1140 (\(database name\) The name of the GDBM 1.5 format file to convert.) 1140 SB
600 1931 34 (-o) 34 SB
750 1931 1080 (\(output file\) The name of the file to create the ASCII flat file in.) 1080 SB
600 1981 26 (-t) 26 SB
750 1981 370 (\(timeout\) Not used???) 370 SB
600 2031 44 (-D) 44 SB
750 2031 932 (\(debug\) Turns on debugging output if greater than one.) 932 SB
600 2081 39 (-Z) 39 SB
750 2081 1058 (\(debug file\) The name of a file to redirect debugging output to.) 1058 SB
32 0 0 46 46 0 0 0 43 /Helvetica-Bold /font13 ANSIFont font
300 2181 219 (crekeydb:) 219 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
450 2237 1620 (This program coverts an ASCII flat file that can be read by RIPEM into the key database format) 1620 SB
300 2287 1741 (\(which is kept in GDBM format\).  This program is useful for updating the local database from flat files) 1741 SB
300 2337 543 (obtained from other key servers.) 543 SB
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
450 2437 895 (crekeydb has the following command line options:) 895 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
600 2487 35 (-p) 35 SB
750 2487 869 (\(flatfile\) The name of the ASCII flat file to convert.) 869 SB
750 2537 407 (Default value is testpub.) 407 SB
600 2587 34 (-o) 34 SB
750 2587 1017 (\(database name\) The name of the GDBM database to create.) 1017 SB
750 2637 509 (Default value is testkey.gdbm.) 509 SB
600 2687 27 (-f) 27 SB
750 2687 1020 (\(fast\) Eliminates extra system calls.  Unused in this version?) 1020 SB
600 2737 36 (-n) 36 SB
750 2737 979 (\(number of items\) Number of items to put in the database.) 979 SB
750 2787 350 (Default value is 100.) 350 SB
600 2837 44 (-D) 44 SB
750 2837 860 (\(debug\) Turns on debugging output when not zero.) 860 SB
EJ RS
%%PageTrailer
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Helvetica-Oblique /font19 ANSIFont font
0 0 0 fC
1329 118 748 (RIPEM Key Server User's Guide   Page ) 748 SB
2077 118 23 (5) 23 SB
32 0 0 50 50 1 0 0 47 /Helvetica-Bold /font13 ANSIFont font
300 269 765 (III. RUNNING THE KEY SERVER:) 765 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
450 380 1542 (There are three parts to the RIPEM key server.  The first part uses the copymail program to) 1542 SB
300 430 1751 (respond to incoming e-mail request to add, change, and delete keys.  The rkeyreg program performs the) 1751 SB
300 480 1786 (actual database updates for this part of the server.  The second part uses the give pubs program to respond) 1786 SB
300 530 1715 (to incoming e-mail requests for a copy of the key flat file.  The db2flat program is run as a cron job to) 1715 SB
300 580 1739 (create the flat file that is sent out.  The last part of the key server is rkeyserv.  This program runs in the) 1739 SB
300 630 1381 (background and responds to UDP request from RIPEM programs for key lookups.) 1381 SB
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font13 ANSIFont font
300 729 924 (Setup for key addition, changes, and deletion:) 924 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
450 830 1018 (To setup the copymail program, you must add entries in the ) 1018 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
1468 835 300 (/etc/aliases) 300 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1768 830 249 ( file to redirect) 249 SB
300 882 1762 (incoming mail to the RIPEM key server.  The sendmail program will then pipe the incoming mail to the) 1762 SB
300 932 924 (copymail program on demand \(i.e. when mail arrives\).) 924 SB
450 982 1528 (The following entries should be added to /etc/aliases \(Modified of course for your path and) 1528 SB
300 1032 295 (directory names\):) 295 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
450 1130 1450 (ripem-register-keys:"|/pub/advos/ripem/server/copymail -d ) 1450 SB
900 1175 925 (    /pub/advos/ripem/server/add-keys") 925 SB
450 1220 1450 (ripem-remove-keys:  "|/pub/advos/ripem/server/copymail -d ) 1450 SB
900 1265 925 (    /pub/advos/ripem/server/add-keys") 925 SB
450 1310 1450 (ripem-change-keys:  "|/pub/advos/ripem/server/copymail -d ) 1450 SB
900 1355 925 (    /pub/advos/ripem/server/add-keys") 925 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
450 1452 1573 (Caution:  The current version of SunOS sends all mail alias strings to the shell in lower case.) 1573 SB
300 1502 920 (Uppercase filenames and directory entries may be lost.) 920 SB
450 1602 1539 (The rkeyreg program then must be run on demand to process the incoming key registration) 1539 SB
300 1652 1074 (requests.  The following is an example of how this can be done:) 1074 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
450 1750 175 (rkeyreg) 175 SB
750 1750 875 (-a /pub/advos/ripem/server/add-keys) 875 SB
750 1795 950 (-r /pub/advos/ripem/server/remove-keys) 950 SB
750 1840 950 (-c /pub/advos/ripem/server/change-keys) 950 SB
750 1885 925 (-p /pub/advos/ripem/server/server.pid) 925 SB
750 1930 975 (-o /pub/advos/ripem/server/pubkeys.gdbm) 975 SB
750 1975 950 (-l /pub/advos/ripem/server/server.log&) 950 SB
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font13 ANSIFont font
300 2121 757 (Setup for requests for the key flat file:) 757 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
450 2172 1565 (The givepubs program is called to respond to incoming requests via e-mail for the key server) 1565 SB
300 2222 1070 (flatfile database.  The following entry must be added to the file ) 1070 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
1370 2227 300 (/etc/aliases) 300 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1670 2222 328 ( to call givepubs on) 328 SB
300 2274 146 (demand:) 146 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
450 2372 1225 (ripem-get-keys:"|/pub/advos/ripem/server/givepubs) 1225 SB
750 2417 975 (    -f /pub/advos/ripem/server/add-keys) 975 SB
750 2462 800 (    -s "Your RIPEM KEY REQUEST"") 800 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
450 2559 1606 (In addition, the db2flat program must be run periodically to update the flatfile from the GDBM) 1606 SB
300 2609 1380 (database file.  The following script can be called as a cron job to do this updating:) 1380 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
450 2707 650 (cd /pub/advos/ripem/server) 650 SB
450 2752 650 (mv pubkeys.txt pubkeys.old) 650 SB
450 2797 950 (db2flat -g pubkeys.gdbm -o pubkeys.txt) 950 SB
EJ RS
%%PageTrailer
SS
0 0 25 11 798 1100 300 SM
32 0 0 42 42 0 0 0 38 /Helvetica-Oblique /font19 ANSIFont font
0 0 0 fC
1329 118 748 (RIPEM Key Server User's Guide   Page ) 748 SB
2077 118 23 (6) 23 SB
32 0 0 42 42 0 0 0 39 /Helvetica-Bold /font13 ANSIFont font
300 268 510 (Setup for the UDP server:) 510 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
450 369 1595 (The UDP server program rkeyserv is run in the background to process incoming UDP requests) 1595 SB
300 419 1795 (from RIPEM programs.  It should be run on a computer with Internet access \(you do not have to use the &) 1795 SB
300 469 1011 (since the program will detach itself from the console\).  The ) 1011 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
1311 474 250 (server.pid) 250 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1561 469 474 ( file must be readable by the) 474 SB
300 521 1530 (rkeyreg program.  The following is an example of how to start a typical key server session:) 1530 SB
32 0 0 42 42 0 0 0 33 /Courier /font0 ANSIFont font
450 619 1550 (rkeyserv -g /pub/advos/ripem/server/pubkeys.gdbm -P server.pid) 1550 SB
EJ RS
%%PageTrailer
%%Trailer
SVDoc restore
end
% TrueType font name key:
%    MSTT31c12b = 2fa7DTimes New RomanF0000004b000002bc0000
%    MSTT31c138 = 2fa7DTimes New RomanF0000003a000002bc0000
%    MSTT31c145 = 2fa7DCourier NewF0000003a000001900000
%    MSTT31c151 = 2fa7DTimes New RomanF00000032000001900000
%    MSTT31c17b = 2fa7DCourier NewF00000032000001900000
%    MSTT31c187 = 2fa7DArialF00000032000001900000
%    MSTT31c192 = 2fa7DTimes New RomanF0000002a000001900000
%    MSTT31c19f = 2fa7DArialF00000032000002bc0000
%    MSTT31c1aa = 2fa7DArialF0000002a000002bc0000
%    MSTT31c1b5 = 2fa7DCourier NewF0000002a000001900000
%    MSTT31c1c1 = 2fa7DArialF0000002a000001900001
%    MSTT31c1cc = 2fa7DArialF0000002e000002bc0000
%    MSTT31c1d7 = 2fa7DTimes New RomanF0000002a000002bc0000
%%DocumentSuppliedResources: procset Win35Dict 3 1

%%DocumentNeededResources: font Courier
%%+ font Helvetica-Bold
%%+ font Helvetica-Oblique
%%+ font Times-Bold
%%+ font Times-Roman

%%EOF
